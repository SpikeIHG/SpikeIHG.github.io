<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MARKDOWN</title>
    <url>/2023/03/22/MARKDOWN-0/</url>
    <content><![CDATA[<h2 id="本文总结一些学习到的Markdown语法以及相关工具"><a href="#本文总结一些学习到的Markdown语法以及相关工具" class="headerlink" title="本文总结一些学习到的Markdown语法以及相关工具"></a>本文总结一些学习到的Markdown语法以及相关工具</h2><ol>
<li><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><ol>
<li><h4 id="标题设置"><a href="#标题设置" class="headerlink" title="标题设置"></a>标题设置</h4><ul>
<li><em>等级标题</em><br> # ## ### 类似的一共有六级 数量不同代表不同的大小</li>
</ul>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2></li>
<li><h4 id="斜体（Italic）"><a href="#斜体（Italic）" class="headerlink" title="斜体（Italic）"></a><em>斜体（Italic）</em></h4><p> 应该有很多种 ，不过较为普适的是*单词* 例子</p>
<h2 id="这是一个例子"><a href="#这是一个例子" class="headerlink" title="这是一个例子"></a><em>这是一个例子</em></h2></li>
<li><h4 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a><strong>粗体</strong></h4><p> 普适的**单词**</p>
<h2 id="这是一个例子-但是实际上每个标题都默认了"><a href="#这是一个例子-但是实际上每个标题都默认了" class="headerlink" title="这是一个例子  但是实际上每个标题都默认了"></a><strong>这是一个例子</strong>  但是实际上每个标题都默认了</h2></li>
<li><h4 id="又粗又斜"><a href="#又粗又斜" class="headerlink" title="又粗又斜"></a><em><strong>又粗又斜</strong></em></h4><p> ***单词*** 注意上面的都是紧紧挨着单词的 </p>
</li>
<li><h4 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h4><p> \ 类似其他的语言 直接 一个反斜杠</p>
</li>
<li><h4 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h4><ol>
<li>可以先敲两个空格之后 然后换行</li>
<li>可以用 &lt;br&gt;</li>
<li>我在Vscode 和 typora 似乎可以直接换行啊</li>
</ol>
</li>
</ol>
<ol start="7">
<li><h4 id="其他几种格式"><a href="#其他几种格式" class="headerlink" title="其他几种格式"></a>其他几种格式</h4><ol>
<li>分割线 *** ___ — 至少三个<br> 举个例子</li>
</ol>
<hr>
<hr>
<hr>
<h3 id="三个效果好像一样"><a href="#三个效果好像一样" class="headerlink" title="三个效果好像一样"></a>三个效果好像一样</h3><ol>
<li>删除线<br> 两个~~单词~~<br> <del>Winter</del></li>
<li>下划线<br> 用的html语法 就是&lt;u&gt;&lt;&#x2F;u&gt;  <em><strong>注意是一个斜杠</strong></em><br> 举个例子 <u>For Ms.Winter</u></li>
</ol>
</li>
</ol>
<ol start="8">
<li><h3 id="——引用与序表"><a href="#——引用与序表" class="headerlink" title="——引用与序表"></a>——引用与序表</h3><pre><code> 引用（为什么已经引用了？？？）
</code></pre>
<ol>
<li>引用<br> （不明所以啊）看一看啊&gt; &gt;&gt; 类似的 举个例子    <blockquote>
<p>你好啊 你们逗号吗</p>
<blockquote>
<p>我很好</p>
<blockquote>
<p>真的吗   </p>
</blockquote>
</blockquote>
</blockquote>
</li>
<li>有序列表<br> 就是我现在写的这些数字标号 注意要隔开<br> 举个例子    <ol>
<li>好<ol>
<li>好<ol>
<li>好 似乎最多只有三级  每次tab一下就可以自动升级或者降级</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li>无序列表<br>   - 使用这个符号<br>   举个例子 <ul>
<li>好 好 好 好<ul>
<li>好</li>
</ul>
</li>
</ul>
</li>
</ol>
</li>
<li><h3 id="重新实验"><a href="#重新实验" class="headerlink" title="重新实验"></a>重新实验</h3><pre><code> 你好 哦 我懂了 如果在有序表之后再两个tab 就可以有这样一个块
</code></pre>
</li>
</ol>
</li>
<li><h4 id="分块"><a href="#分块" class="headerlink" title="分块"></a>分块</h4><pre><code>你啥感觉卡斯柯估计是客观的就卡死了干净ask房间昆仑山感觉

阿贾克斯打个卡速度过快发生你的开发代码 ***似乎没什么用***
</code></pre>
<ol start="11">
<li><h4 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h4><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">(<span class="type">void</span>)</span>:</span></span><br><span class="line"><span class="function">&#123;</span></span><br><span class="line">    <span class="type">int</span> a=<span class="number">100</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello,World!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>就是使用```cpp &#96;&#96;&#96;哇好厉害啊</p>
</li>
<li><h4 id="空格表示"><a href="#空格表示" class="headerlink" title="空格表示"></a>空格表示</h4><p>这个有点有趣 $~~~~$ 可以指定任意个数的</p>
</li>
<li><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><ol>
<li><em>超链接</em><br>使用&lt;&gt; 直接写一个地址就可以     同样可以使用邮箱地址<br><a class="link"   href="https://www.w3school.com.cn/" >https://www.w3school.com.cn/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><em>引用式超链接</em><ol>
<li>  <a class="link"   href="https://www.w3school.com.cn/" >link1djfj <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ol>
</li>
<li><em>设定文字的超链接</em></li>
</ol>
<pre><code> 1.  使用\[显示名字](url)
</code></pre>
</li>
</ol>
<p>   <a class="link"   href="https://www.w3school.com.cn/" >这里是一个链接地址 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 也可以是一个文件路<br>          2.  <em>带有一个titile</em><br>  所谓的title就是悬停再链接上会显示的文字 举个例子 放在()里 url用空格相连 这是一个链接<a class="link"   href="https://www.w3school.com.cn/"  title="Look at you">Look at me <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>    &#x2F;&#x2F;感觉还是挺方便的<br>        3. <em>带有格式化的链接</em><br>  <strong><a class="link"   href="https://www.w3school.com.cn/" >hello <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></strong><br>  <em><a class="link"   href="https://www.w3school.com.cn/" >hello <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></em><br>  <em><strong><a class="link"   href="https://www.w3school.com.cn/" >hello <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></strong></em><br>   <a href="https://www.w3school.com.cn/" title="Hello,World"><code>hello</code></a><br>  注意最后一个 是[`word`](url &quot;title&quot;) 的写法<br>        4. <em>引用式链接</em><br>   大概就是 创建一个链接创建一个标签 然后可以多次使用了 举个例子<br>   首先创建 [link]: <a class="link"   href="https://www.w3school.com.cn/" >https://www.w3school.com.cn/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>  注意有： 且有一个空格</p>
</li>
</ol>
<p>   <a class="link"   href="https://www.w3school.com.cn/" >我将进行第一次引用 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>   用法格式 [显示文字][标签名]</p>
<ol>
<li><h4 id="图片的使用"><a href="#图片的使用" class="headerlink" title="图片的使用"></a>图片的使用</h4><ol>
<li><p>格式 ！[这是图片](本地地址 “图片标题”)</p>
</li>
<li><p>带有链接的图片 ！[[这是一个图片](本地地址)](链接) 地址可以是url 注意两个[[]]</p>
</li>
<li><p>举个例子 <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/jiaj.jpg"
                      alt="My photo"
                >     </p>
</li>
<li><p><a href="https://www.w3school.com.cn/"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://th.bing.com/th/id/OIP.avb9nDfw3kq7NOoP0grM4wHaEK?w=282&h=180&c=7&r=0&o=5&dpr=1.3&pid=1.7"
                      alt="My photo"
                ></a></p>
<ol>
<li><h4 id="文字与背景颜色"><a href="#文字与背景颜色" class="headerlink" title="文字与背景颜色"></a>文字与背景颜色</h4></li>
</ol>
</li>
<li><p>文字颜色 支持十六进制颜色表示</p>
</li>
</ol>
</li>
</ol>
<pre><code>2.  举个例子  \&lt;font color = Blue&gt;Text\&lt;/font&gt;     
     &lt;font color = gree&gt;hiiii&lt;/font&gt;       
     &lt;font color = #f0f000&gt;hiii&lt;/font&gt;    
     /十六进制颜色是#开头 然后六位十六进制的数字 然后 顺序是RGB 255 是最多       
     &lt;font color = #f0005&gt;让我们看看这个颜色&lt;/font&gt;            
     但是其实内置了很多 颜色 举个例子 seagreen seablue        
     &lt;font color= seagreen&gt;let me check it &lt;/font&gt;     
         &lt;font color= seablue&gt;let me check it &lt;/font&gt;  
   3.  *背景颜色*        
    \&lt;font style=background:颜色&gt; &lt;/font&gt;       

 举个例子
     &lt;font style =background:seagreen&gt;hello world  你好 世界&lt;/font&gt;   
</code></pre>
<p>​<br>​<br>2. ## 工具推荐与使用<br>    1. ### Vscode &amp; 相关 的插件<br>        很方便的一点就是可以瞬时查看自己的样式 并且标准与github一致<br>    2. ### Typora<br>        确实就很好了 可以通过选项 而不用在意源码 了 相当于提供了一个GUI</p>
<ol start="3">
<li><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2></li>
</ol>
<blockquote>
<p>目前所需的Markdown语法大概如此至于与Latex和HTML相关的由于使用较少，暂未提及，以后遇到再作更新学习</p>
</blockquote>
]]></content>
      <tags>
        <tag>MARKDOWN</tag>
      </tags>
  </entry>
  <entry>
    <title>Winter&#39;s blog</title>
    <url>/2023/03/16/Winter-s-blog/</url>
    <content><![CDATA[<h2 id="For-Ms-Winter"><a href="#For-Ms-Winter" class="headerlink" title="For Ms.Winter"></a>For Ms.Winter</h2><h3 id="先记录一下一个找图片地址的好地方-进入NASA官网直接copy-image-address-也可以在google里面使用-但是可能无法成功"><a href="#先记录一下一个找图片地址的好地方-进入NASA官网直接copy-image-address-也可以在google里面使用-但是可能无法成功" class="headerlink" title="先记录一下一个找图片地址的好地方 进入NASA官网直接copy image address 也可以在google里面使用 但是可能无法成功"></a>先记录一下一个找图片地址的好地方 进入NASA官网直接copy image address 也可以在google里面使用 但是可能无法成功</h3>]]></content>
      <tags>
        <tag>Elements</tag>
      </tags>
  </entry>
  <entry>
    <title>单调栈</title>
    <url>/2023/03/16/%E5%8D%95%E8%B0%83%E6%A0%88/</url>
    <content><![CDATA[<h2 id="关于单调栈的一些东西"><a href="#关于单调栈的一些东西" class="headerlink" title="关于单调栈的一些东西"></a>关于单调栈的一些东西</h2><h3 id="单调栈模板"><a href="#单调栈模板" class="headerlink" title="单调栈模板"></a>单调栈模板</h3><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">3000010</span>;</span><br><span class="line"><span class="type">int</span> a[N],f[N];</span><br><span class="line">stack&lt;<span class="type">int</span>&gt;s;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(!s.<span class="built_in">empty</span>()&amp;&amp;a[s.<span class="built_in">top</span>()]&lt;=a[i])</span><br><span class="line">        s.<span class="built_in">pop</span>();</span><br><span class="line">        f[i]=s.<span class="built_in">empty</span>()?<span class="number">0</span>:s.<span class="built_in">top</span>();</span><br><span class="line">        s.<span class="built_in">push</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,f[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
</search>
